<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cafebabe.phosphor.dao.TeacherCourseDAO">
    <resultMap id="BaseResultMap" type="com.cafebabe.phosphor.model.entity.TeacherCourse">
        <id column="teacher_course_id" jdbcType="INTEGER" property="teacherCourseId"/>
        <result column="teacher_id" jdbcType="INTEGER" property="teacherId"/>
        <result column="course_id" jdbcType="INTEGER" property="courseId"/>
        <result column="teacher_course_sf" jdbcType="VARCHAR" property="teacherCourseSf"/>
    </resultMap>
    <sql id="Base_Column_List">
        teacher_course_id, teacher_id, course_id, teacher_course_sf
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from teacher_course
        where teacher_course_id = #{teacherCourseId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from teacher_course
        where teacher_course_id = #{teacherCourseId,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.cafebabe.phosphor.model.entity.TeacherCourse">
        insert into teacher_course (teacher_course_id, teacher_id, course_id, teacher_course_sf)
        values (#{teacherCourseId,jdbcType=INTEGER},
                #{teacherId,jdbcType=INTEGER},
                #{courseId,jdbcType=INTEGER},
                #{teacherCourseSf,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.cafebabe.phosphor.model.entity.TeacherCourse">
        insert into teacher_course
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="teacherCourseId != null">
                teacher_course_id,
            </if>
            <if test="teacherId != null">
                teacher_id,
            </if>
            <if test="courseId != null">
                course_id,
            </if>
            <if test="teacherCourseSf != null">
                teacher_course_sf,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="teacherCourseId != null">
                #{teacherCourseId,jdbcType=INTEGER},
            </if>
            <if test="teacherId != null">
                #{teacherId,jdbcType=INTEGER},
            </if>
            <if test="courseId != null">
                #{courseId,jdbcType=INTEGER},
            </if>
            <if test="teacherCourseSf != null">
                #{teacherCourseSf,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.cafebabe.phosphor.model.entity.TeacherCourse">
        update teacher_course
        <set>
            <if test="teacherId != null">
                teacher_id = #{teacherId,jdbcType=INTEGER},
            </if>
            <if test="courseId != null">
                course_id = #{courseId,jdbcType=INTEGER},
            </if>
            <if test="teacherCourseSf != null">
                teacher_course_sf = #{teacherCourseSf,jdbcType=VARCHAR},
            </if>
        </set>
        where teacher_course_id = #{teacherCourseId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.cafebabe.phosphor.model.entity.TeacherCourse">
        update teacher_course
        set teacher_id        = #{teacherId,jdbcType=INTEGER},
            course_id         = #{courseId,jdbcType=INTEGER},
            teacher_course_sf = #{teacherCourseSf,jdbcType=VARCHAR}
        where teacher_course_id = #{teacherCourseId,jdbcType=INTEGER}
    </update>

    <select id="getTeacherId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        select teacher_id
        from teacher_course
        where course_id = #{CourseId,jdbcType=INTEGER}
    </select>
</mapper>