<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cafebabe.phosphor.dao.FeedbackDAO">
    <resultMap id="BaseResultMap" type="com.cafebabe.phosphor.model.entity.Feedback">
        <id column="feedback_id" jdbcType="INTEGER" property="feedbackId"/>
        <result column="teacher_id" jdbcType="INTEGER" property="teacherId"/>
        <result column="parent_id" jdbcType="INTEGER" property="parentId"/>
        <result column="feedback_content" jdbcType="VARCHAR" property="feedbackContent"/>
        <result column="feedback_status" jdbcType="INTEGER" property="feedbackStatus"/>
        <result column="feedback_sf" jdbcType="VARCHAR" property="feedbackSf"/>
    </resultMap>
    <sql id="Base_Column_List">
        feedback_id, teacher_id, parent_id, feedback_content, feedback_status, feedback_sf
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from feedback
        where feedback_id = #{feedbackId,jdbcType=INTEGER}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from feedback
        where feedback_id = #{feedbackId,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.cafebabe.phosphor.model.entity.Feedback">
        insert into feedback (feedback_id, teacher_id, parent_id, feedback_content, feedback_status, feedback_sf)
        values (#{feedbackId,jdbcType=INTEGER},
                #{teacherId,jdbcType=INTEGER},
                #{parentId,jdbcType=INTEGER},
                #{feedbackContent,jdbcType=VARCHAR},
                #{feedbackStatus,jdbcType=INTEGER},
                #{feedbackSf,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.cafebabe.phosphor.model.entity.Feedback">
        insert into feedback
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="feedbackId != null">
                feedback_id,
            </if>
            <if test="teacherId != null">
                teacher_id,
            </if>
            <if test="parentId != null">
                parent_id,
            </if>
            <if test="feedbackContent != null">
                feedback_content,
            </if>
            <if test="feedbackStatus != null">
                feedback_status,
            </if>
            <if test="feedbackSf != null">
                feedback_sf,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="feedbackId != null">
                #{feedbackId,jdbcType=INTEGER},
            </if>
            <if test="teacherId != null">
                #{teacherId,jdbcType=INTEGER},
            </if>
            <if test="parentId != null">
                #{parentId,jdbcType=INTEGER},
            </if>
            <if test="feedbackContent != null">
                #{feedbackContent,jdbcType=VARCHAR},
            </if>
            <if test="feedbackStatus != null">
                #{feedbackStatus,jdbcType=INTEGER},
            </if>
            <if test="feedbackSf != null">
                #{feedbackSf,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.cafebabe.phosphor.model.entity.Feedback">
        update feedback
        <set>
            <if test="teacherId != null">
                teacher_id = #{teacherId,jdbcType=INTEGER},
            </if>
            <if test="parentId != null">
                parent_id = #{parentId,jdbcType=INTEGER},
            </if>
            <if test="feedbackContent != null">
                feedback_content = #{feedbackContent,jdbcType=VARCHAR},
            </if>
            <if test="feedbackStatus != null">
                feedback_status = #{feedbackStatus,jdbcType=INTEGER},
            </if>
            <if test="feedbackSf != null">
                feedback_sf = #{feedbackSf,jdbcType=VARCHAR},
            </if>
        </set>
        where feedback_id = #{feedbackId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.cafebabe.phosphor.model.entity.Feedback">
        update feedback
        set teacher_id       = #{teacherId,jdbcType=INTEGER},
            parent_id        = #{parentId,jdbcType=INTEGER},
            feedback_content = #{feedbackContent,jdbcType=VARCHAR},
            feedback_status  = #{feedbackStatus,jdbcType=INTEGER},
            feedback_sf      = #{feedbackSf,jdbcType=VARCHAR}
        where feedback_id = #{feedbackId,jdbcType=INTEGER}
    </update>


    <select id="getFeedbackList" parameterType="com.cafebabe.phosphor.model.dto.FeedbackDTO"
            resultType="com.cafebabe.phosphor.model.dto.FeedbackDTO">
        select teacher_id, feedback_id, parent.parent_id, parent_name,parent_photo, parent_phone,feedback_content,feedback_status
        from feedback
                 join parent on feedback.parent_id = parent.parent_id
        where teacher_id = #{sf,jdbcType=INTEGER}
          and feedback_status = 1
        limit #{startRecord},#{pageSize}
    </select>

    <select id="getFeedbackCount" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        select count(*)
        from feedback
        where teacher_id =  #{teacherId,jdbcType=INTEGER}
    </select>

    <insert id="insertFeedback" parameterType="com.cafebabe.phosphor.model.entity.Feedback">
        insert into feedback (teacher_id, parent_id, feedback_content, feedback_status, feedback_sf)
        values (#{teacherId,jdbcType=INTEGER},
                #{parentId,jdbcType=INTEGER},
                #{feedbackContent,jdbcType=VARCHAR},
                #{feedbackStatus,jdbcType=INTEGER},
                #{feedbackSf,jdbcType=VARCHAR})
    </insert>

    <update id="removeFeedback" parameterType="java.lang.Integer">
        update feedback
        set feedback_status = 0
        where feedback_id = #{feedbackId,jdbcType=INTEGER}
    </update>
</mapper>