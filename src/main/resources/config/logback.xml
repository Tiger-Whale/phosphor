<?xml version="1.0" encoding="UTF-8"?>

<!--默认重新加载-->
<configuration scan="true" scanPeriod="60 seconds" debug="false">
    <!--定义参数常量-->
    <property name="log.level" value="debug"/>
    <!--logger文件最大保存的数量-->
    <property name="log.maxHistory" value="30"/>
    <!--logger 存储的跟路径-->
    <!--catalina.base tomcat 根路径-->
    <property name="log.filePath" value="${catalina.base}/logs/webapp"/>
    <!--日志格式-->
    <property name="log.pattern"
              value="%d{yyyy-MM-dd HH:mm:ss:SS}[%thread]%-5level%logger{50}-%msg%n"/>

    <!--输出介质 控制台-->
    <appender name="consoleAppender" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>
                ${log.pattern}
            </pattern>
        </encoder>
    </appender>

    <!--输出介质日志文件 Debug-->
    <!--随着时间增大，数据增多，logger可滚动-->
    <appender name="debugAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>
            ${log.filePath}/debug.log
        </file>

        <!--滚动策略-->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--文件名称-->
            <fileNamePattern>
                ${log.filePath}/debug/debug.%d{yyyy-MM-dd}.log.gz
            </fileNamePattern>
            <maxHistory>
                ${log.maxHistory}
            </maxHistory>
            <encoder>
                <pattern>
                    ${log.pattern}
                </pattern>
            </encoder>
            <!--过滤不是debug level的日志-->
            <filter class="ch.qos.logback.classic.filter.LevelFilter">
                <level>DEBUG</level>
                <onMatch>ACCEPT</onMatch>
                <onMismacth>DENY</onMismacth>
            </filter>
        </rollingPolicy>
    </appender>

    <!--输出介质日志文件 INFO-->
    <!--随着时间增大，数据增多，logger可滚动-->
    <appender name="infoAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>
            ${log.filePath}/info.log
        </file>

        <!--滚动策略-->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--文件名称-->
            <fileNamePattern>
                ${log.filePath}/info/info.%d{yyyy-MM-dd}.log.gz
            </fileNamePattern>
            <maxHistory>
                ${log.maxHistory}
            </maxHistory>
            <encoder>
                <pattern>
                    ${log.pattern}
                </pattern>
            </encoder>
            <!--过滤不是debug level的日志-->
            <filter class="ch.qos.logback.classic.filter.LevelFilter">
                <level>INFO</level>
                <onMatch>ACCEPT</onMatch>
                <onMismacth>DENY</onMismacth>
            </filter>
        </rollingPolicy>
    </appender>

    <!--输出介质日志文件 ERROR-->
    <!--随着时间增大，数据增多，logger可滚动-->
    <appender name="errorAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>
            ${log.filePath}/error.log
        </file>

        <!--滚动策略-->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--文件名称-->
            <fileNamePattern>
                ${log.filePath}/error/error.%d{yyyy-MM-dd}.log.gz
            </fileNamePattern>
            <maxHistory>
                ${log.maxHistory}
            </maxHistory>
            <encoder>
                <pattern>
                    ${log.pattern}
                </pattern>
            </encoder>
            <!--过滤不是debug level的日志-->
            <filter class="ch.qos.logback.classic.filter.LevelFilter">
                <level>ERROR</level>
                <onMatch>ACCEPT</onMatch>
                <onMismacth>DENY</onMismacth>
            </filter>
        </rollingPolicy>
    </appender>
    <!--监测 设置日志level-->
    <logger name="com.cafebabe.phosphor" level="${log.level}" additivity="true">
        <!--输出信息绑定-->
        <appender-ref ref="debugAppender"/>

        <appender-ref ref="infoAppender"/>

        <appender-ref ref="errorAppender"/>
    </logger>
    <!--根 默认info-->
    <root level="info">
        <appender-ref ref="consoleAppender"/>
    </root>
</configuration>